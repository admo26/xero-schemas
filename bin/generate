#!/usr/bin/env php
<?php

include __DIR__ . '/../vendor/autoload.php';

use Calcinai\XeroSchemaGenerator\API;
use Calcinai\XeroSchemaGenerator\Generator;
use Calcinai\XeroSchemaGenerator\ParsedObject\Enum;
use Calcinai\XeroSchemaGenerator\ParsedObject\Model;
use Calcinai\XeroSchemaGenerator\Scraper;

define('APP_ROOT', realpath(sprintf('%s/../', __DIR__)));

$scraper = new Scraper('http://developer.xero.com/documentation');

$accounting_api = new API('Accounting API', '/api.xro', '2.0');
$scraper->scrapeEnums($accounting_api, 'api/types');
$scraper->scrapeModels($accounting_api, 'api', [
    'accounts',
    //'bankstatements',
    'banktransactions',
    'bank-transfers',
    'branding-themes',
    'contacts',
    'contactgroups',
    'credit-notes',
    'currencies',
    'employees',
    'expense-claims',
    'invoices',
    'items',
    'journals',
    'linked-transactions',
    'manual-journals',
    'organisation',
    'overpayments',
    'payments',
    'prepayments',
    'purchase-orders',
    //'quotes', //-Not avaliable in the API
    'receipts',
    'repeating-invoices',
    //'reports', - this is in a way different format
    'tax-rates',
    'tracking-categories',
    'users'
]);

$payroll_api = new API('Payroll - AU', '/payroll.xro', '1.0');
$scraper->scrapeEnums($payroll_api, 'payroll-api/types-and-codes');
$scraper->scrapeModels($payroll_api, 'payroll-api', [
    'employees',
    'leaveapplications',
    'payitems',
    'payrollcalendars',
    'payruns',
    'payslip',
    'settings',
    'superfunds',
    'superfundproducts',
    'timesheets'
]);

$payroll_api_us = new API('Payroll - US', '/payroll.xro', '1.0');
$scraper->scrapeEnums($payroll_api_us, 'payroll-api-us/types-codes');
$scraper->scrapeModels($payroll_api_us, 'payroll-api-us', [
    'employees',
    'pay-items',
    'pay-runs',
    'pay-schedules',
    'pay-stubs',
    'settings',
    'timesheets',
    'work-locations'
]);


$files_api = new API('Files API', '/files.xro', '1.0');
$scraper->scrapeEnums($files_api, 'files-api/types');
$scraper->scrapeModels($files_api, 'files-api', [
    'files',
    'folders',
    'associations'
]);


$assets_api = new API('Assets API', '/assets.xro', '1.0');
$scraper->scrapeEnums($assets_api, 'assets-api/types');
$scraper->scrapeModels($assets_api, 'assets-api', [
    'assets',
    'asset-types',
    'settings'
]);


$generator = new Generator();

file_put_contents(sprintf('%s/schemas/accounting.json', APP_ROOT), json_encode($generator->generate($accounting_api), JSON_PRETTY_PRINT));
file_put_contents(sprintf('%s/schemas/payroll_au.json', APP_ROOT), json_encode($generator->generate($payroll_api), JSON_PRETTY_PRINT));
file_put_contents(sprintf('%s/schemas/payroll_us.json', APP_ROOT), json_encode($generator->generate($payroll_api_us), JSON_PRETTY_PRINT));
file_put_contents(sprintf('%s/schemas/files.json', APP_ROOT), json_encode($generator->generate($files_api), JSON_PRETTY_PRINT));
file_put_contents(sprintf('%s/schemas/assets.json', APP_ROOT), json_encode($generator->generate($assets_api), JSON_PRETTY_PRINT));
